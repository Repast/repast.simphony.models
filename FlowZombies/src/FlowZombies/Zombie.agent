<?xml version="1.0" encoding="UTF-8"?>
<agent version="1" agentcomment="This is an agent." agentclassname="Zombie" agentparentclassname="" agentinterfaces="" agentimports="">
  <behaviorsteps>
    <behaviorstep x="46" y="31" scheduleannotationstart="1" scheduleannotationpick="" scheduleannotationinterval="1" scheduleannotationpriority="" scheduleannotationduration="" scheduleannotationshuffle="0" watchannotationid="" watchannotationquery="" watchannotationtargetclassname="" watchannotationtargetfieldnames="" watchannotationtriggercondition="" watchannotationtriggerschedule="1" watchannotationtriggerdelta="1" watchannotationtriggerpriority="" watchannotationpick="" comment="This is the step behavior." visibility="0" returntype="def" compiledname="step" parameters="" exceptions="">
      <label x="46" y="16" text="Step"/>
    </behaviorstep>
    <behaviorstep x="383" y="29" scheduleannotationstart="" scheduleannotationpick="" scheduleannotationinterval="" scheduleannotationpriority="" scheduleannotationduration="" scheduleannotationshuffle="0" watchannotationid="" watchannotationquery="" watchannotationtargetclassname="" watchannotationtargetfieldnames="" watchannotationtriggercondition="" watchannotationtriggerschedule="1" watchannotationtriggerdelta="1" watchannotationtriggerpriority="" watchannotationpick="" comment="This is the step behavior." visibility="0" returntype="def" compiledname="infect" parameters="" exceptions="">
      <label x="383" y="14" text="Infect"/>
    </behaviorstep>
  </behaviorsteps>
  <tasksteps>
    <taskstep x="46" y="143" comment="This is a task." command1="Grid grid = FindGrid(&quot;FlowZombies/grid&quot;)" command2="GridPoint pt = grid.getLocation(this)" command3="GridCellNgh nghCreator = new GridCellNgh(grid, pt, Human.class, 1, 1)" command4="List gridCells = nghCreator.getNeighborhood(true)" command5="SimUtilities.shuffle(gridCells, RandomHelper.getUniform())">
      <label x="77" y="122" text="Grid Neighbors"/>
    </taskstep>
    <taskstep x="46" y="251" comment="This is a task." command1="GridPoint pointWithMostHumans = null" command2="int maxCount = -1" command3="" command4="" command5="">
      <label x="76" y="231" text="Initialize loop"/>
    </taskstep>
    <taskstep x="46" y="482" comment="This is a task." command1="int x = pointWithMostHumans.getX()" command2="int y = pointWithMostHumans.getY()" command3="grid.moveTo(this,x,y)" command4="moved = true" command5="infect()">
      <label x="46" y="467" text="Do Task"/>
    </taskstep>
    <taskstep x="260" y="369" comment="This is a task." command1="pointWithMostHumans = cell.getPoint()" command2="maxCount = cell.size()" command3="" command4="" command5="">
      <label x="235" y="353" text="Point with most humans"/>
    </taskstep>
    <taskstep x="383" y="142" comment="This is a task." command1="Grid grid = FindGrid(&quot;FlowZombies/grid&quot;)" command2="GridPoint pt = grid.getLocation(this)" command3="List humans = new ArrayList();" command4="Iterable objects = grid.getObjectsAt(pt.getX(), pt.getY())" command5="">
      <label x="415" y="123" text="Find Humans"/>
    </taskstep>
    <taskstep x="499" y="255" comment="This is a task." command1="Object o = objects.next()" command2="" command3="" command4="" command5="">
      <label x="499" y="240" text="Get Object"/>
    </taskstep>
    <taskstep x="707" y="255" comment="This is a task." command1="humans.add(o)" command2="" command3="" command4="" command5="">
      <label x="707" y="240" text="save human"/>
    </taskstep>
    <taskstep x="522" y="364" comment="This is a task." command1="int index = RandomHelper.nextIntFromTo(0, humans.size() - 1)" command2="Object human = humans.get(index)" command3="Context context = RemoveAgentFromContext(&quot;FlowZombies&quot;, human)" command4="Object zombie = CreateAgents(&quot;FlowZombies&quot;, &quot;FlowZombies.Zombie&quot;, 1)" command5="MoveAgent(&quot;FlowZombies/grid&quot;, zombie, pt.getX(), pt.getY())">
      <label x="522" y="349" text="Braaaaaains!"/>
    </taskstep>
  </tasksteps>
  <decisionsteps>
    <decisionstep x="46" y="369" comment="This is a loop." criteria="GridCell cell in gridCells" branchType="while">
      <label x="22" y="342" text="Loop over neighbors"/>
    </decisionstep>
    <decisionstep x="148" y="369" comment="This is an agent decision." criteria="cell.size() &gt; maxCount" branchType="if">
      <label x="148" y="354" text="Check count"/>
    </decisionstep>
    <decisionstep x="383" y="255" comment="This is a loop." criteria="objects.hasNext()" branchType="while">
      <label x="383" y="240" text="Loop over objects"/>
    </decisionstep>
    <decisionstep x="603" y="255" comment="This is an agent decision." criteria="o instanceof Human" branchType="if">
      <label x="603" y="240" text="is Human?"/>
    </decisionstep>
    <decisionstep x="383" y="364" comment="Found Humans?" criteria="humans.size() &gt; 0" branchType="if">
      <label x="421" y="353" text="Found Humans?"/>
    </decisionstep>
  </decisionsteps>
  <joinsteps/>
  <agentproperties>
    <agentproperty x="208" y="31" comment="This is an agent property." visibility="0" compiledname="moved" type="boolean" defaultvalue="false">
      <label x="213" y="16" text="Moved"/>
    </agentproperty>
  </agentproperties>
  <endsteps>
    <endstep x="51" y="599"/>
    <endstep x="388" y="482"/>
  </endsteps>
  <connections>
    <transitions>
      <transition>
        <transitionsource type="behavior" index="0" anchor="0"/>
        <transitiontarget type="task" index="0" anchor="0"/>
        <bendpoints/>
      </transition>
      <transition>
        <transitionsource type="behavior" index="1" anchor="0"/>
        <transitiontarget type="task" index="4" anchor="0"/>
        <bendpoints/>
      </transition>
      <transition>
        <transitionsource type="task" index="0" anchor="2"/>
        <transitiontarget type="task" index="1" anchor="0"/>
        <bendpoints/>
      </transition>
      <transition>
        <transitionsource type="task" index="1" anchor="2"/>
        <transitiontarget type="decision" index="0" anchor="0"/>
        <bendpoints/>
      </transition>
      <transition>
        <transitionsource type="task" index="2" anchor="2"/>
        <transitiontarget type="end" index="0" anchor="0"/>
        <bendpoints/>
      </transition>
      <transition>
        <transitionsource type="task" index="4" anchor="2"/>
        <transitiontarget type="decision" index="2" anchor="0"/>
        <bendpoints/>
      </transition>
      <transition>
        <transitionsource type="task" index="5" anchor="3"/>
        <transitiontarget type="decision" index="3" anchor="1"/>
        <bendpoints/>
      </transition>
    </transitions>
    <booleantransitions>
      <booleantransition value="true">
        <transitionsource type="decision" index="0" anchor="3"/>
        <transitiontarget type="decision" index="1" anchor="1"/>
        <bendpoints/>
      </booleantransition>
      <booleantransition value="false">
        <transitionsource type="decision" index="0" anchor="2"/>
        <transitiontarget type="task" index="2" anchor="0"/>
        <bendpoints/>
      </booleantransition>
      <booleantransition value="true">
        <transitionsource type="decision" index="1" anchor="3"/>
        <transitiontarget type="task" index="3" anchor="1"/>
        <bendpoints/>
      </booleantransition>
      <booleantransition value="true">
        <transitionsource type="decision" index="2" anchor="3"/>
        <transitiontarget type="task" index="5" anchor="1"/>
        <bendpoints/>
      </booleantransition>
      <booleantransition value="false">
        <transitionsource type="decision" index="2" anchor="2"/>
        <transitiontarget type="decision" index="4" anchor="0"/>
        <bendpoints/>
      </booleantransition>
      <booleantransition value="true">
        <transitionsource type="decision" index="3" anchor="3"/>
        <transitiontarget type="task" index="6" anchor="1"/>
        <bendpoints/>
      </booleantransition>
      <booleantransition value="true">
        <transitionsource type="decision" index="4" anchor="3"/>
        <transitiontarget type="task" index="7" anchor="1"/>
        <bendpoints/>
      </booleantransition>
      <booleantransition value="false">
        <transitionsource type="decision" index="4" anchor="2"/>
        <transitiontarget type="end" index="1" anchor="0"/>
        <bendpoints/>
      </booleantransition>
    </booleantransitions>
  </connections>
</agent>